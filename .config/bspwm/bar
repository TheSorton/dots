#!/usr/bin/env bash

###################
# Inital Settings #
###################

panel_dimensions="1536x25+240+5"
barpid="$$"
barname="bar"

#colors and fonts
. $HOME/.cache/wal/colors.sh
color_bg="$background"
color_fg="$foreground"

invert_bg="$color4"
invert_fg="$background"

#check if panel is already running
if [ $(pgrep -cx lemonbar) -gt 0 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

#stop processes on kill
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# remove old panel fifo, create new one
fifo="/tmp/panel_fifo"
[ -e "$fifo" ] && rm "$fifo"
mkfifo "$fifo"

###################
#     Modules     #
###################

workspaces() {
    #get workspace names and current workspace
    spaces=($(xprop -root _NET_DESKTOP_NAMES | awk '{$1=$2=""; print $0}' | sed -e 's/,//g' -e 's/\"//g' -e 's/^[[:space:]]*//'))
    current=$(xprop -root _NET_CURRENT_DESKTOP | awk '{print $3}')
    descriptors=$(bspc query -D | tr '\n' ' ')

    # split descriptors into array 
    IFS=' ' read -ra descriptors <<< "$descriptors"

    #printf workspaces, change color for the current workspace
    for ((i=0;i<${#spaces[*]};i++)) do
        if [ "$i" = "$current" ]; then
            spaces[$i]="%{A1:bspc desktop -f ${descriptors[$i]}:}%{B$invert_bg}%{F$invert_fg} ${spaces[$i]} %{B-}%{F-}%{A}"
        else
            spaces[$i]="%{A1:bspc desktop -f ${descriptors[$i]}:} ${spaces[$i]} %{A}"
        fi
    done

    #remove extra spaces
    myspaces=$(sed -e 's/\(}\).?\(%\)/\1\2/' <<< "${spaces[*]}")

    printf "%s\n" "workspaces%{A4:bspc desktop -f next:}%{A5:bspc desktop -f prev:}${myspaces}%{A}%{A}"
}


#launches rofi
launcher() {
            printf "%s\n" "launcher%{A1:rofi -show run &:}%{B$invert_bg}%{F$invert_fg} ï…¼ rofi %{F-}%{B-}%{A}"
    }

volume() {
    volume=$(pamixer --get-volume)
    printf "%s\n" "volume%{A3:amixer -q sset Master toggle:}%{A5:pamixer -d 5:}%{A4:pamixer -i 5:}VOL: $volume%{A}%{A}%{A}"
}

media() {
    printf "%s\n" "media%{A1:playerctl play-pause:}%{A2:playerctl previous:}%{A3:playerctl next:}SONG: $(echo $(playerctl metadata artist) - $(playerctl metadata title))%{F-}%{A}%{A}%{A}"
}

clock() {
    time1=$(date '+%R')

    printf "%s\n" "clock%{B$invert_bg}%{F$invert_fg} $time1 %{F-}%{B-}"
}

#run each applet in subshell and output to fifo
while :; do workspaces; sleep 0.1s; done > "$fifo" &
while :; do media; sleep .5s; done > "$fifo" &
while :; do volume; sleep 0.1s; done > "$fifo" &
while :; do clock; sleep 3s; done > "$fifo" &
while :; do launcher; break; done > "$fifo" &

#################
# Build the bar #
#################

while read -r line ; do
    case $line in
        workspaces*)
            workspaces=" ${line:10}"
            ;;
         media*)
            media=" ${line:5}"
            ;;
        volume*)
            volume="  ${line:6}"
            ;;
        clock*)
            clock="  ${line:5}"
            ;;
        launcher*)
            launcher="${line:8}"
            ;;
    esac
    $HOME/.config/bspwm/bar_fix
    printf "%s\n" "${launcher}${workspaces}%{c}%{r}${media}${volume}${clock}"
done < "$fifo" | lemonbar \
    -g "$panel_dimensions" \
    -f "Ubuntu Mono:size=12:style=Bold" \
    -f "Noto Sans CJK JP:size=10:style=Bold" \
    -f "FontAwesome:size=13:style=Bold" \
    -a 20 \
    -B "$color_bg" \
    -F "$color_fg" \
    -p \
    -r 3 \
    -R "$invert_bg"| bash;
    exit
done
